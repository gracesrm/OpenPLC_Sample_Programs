#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// FUNCTION_BLOCK URGENCE
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,ST12)
  __DECLARE_VAR(BOOL,ST13)
  __DECLARE_VAR(BOOL,ST14)
  __DECLARE_VAR(BOOL,ST15)
  __DECLARE_VAR(BOOL,DEPART)
  __DECLARE_VAR(BOOL,URGENCES)
  __DECLARE_VAR(BOOL,M_DRAINAGE)
  __DECLARE_VAR(BOOL,M_STEP_1)

  // FB private variables - TEMP, private and located variables
  STEP __step_list[4];
  UINT __nb_steps;
  ACTION __action_list[4];
  UINT __nb_actions;
  __IEC_BOOL_t __transition_list[4];
  __IEC_BOOL_t __debug_transition_list[4];
  UINT __nb_transitions;
  TIME __lasttick_time;

} URGENCE;

void URGENCE_init__(URGENCE *data__, BOOL retain);
// Code part
void URGENCE_body__(URGENCE *data__);
// FUNCTION_BLOCK PRINCIPAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,ST1)
  __DECLARE_VAR(BOOL,ST2)
  __DECLARE_VAR(BOOL,ST3)
  __DECLARE_VAR(BOOL,ST4)
  __DECLARE_VAR(BOOL,ST5)
  __DECLARE_VAR(BOOL,ST6)
  __DECLARE_VAR(BOOL,ST7)
  __DECLARE_VAR(BOOL,ST8)
  __DECLARE_VAR(BOOL,ST9)
  __DECLARE_VAR(BOOL,ST10)
  __DECLARE_VAR(BOOL,ST11)
  __DECLARE_VAR(BOOL,ST16)
  __DECLARE_VAR(BOOL,ST17)
  __DECLARE_VAR(BOOL,ST18)
  __DECLARE_VAR(BOOL,M_LAVAGE)
  __DECLARE_VAR(BOOL,M_RINSE)
  __DECLARE_VAR(BOOL,M_HOT_RINSE)
  __DECLARE_VAR(BOOL,M_P_SAVON)
  __DECLARE_VAR(BOOL,M_P_ASSAIN)
  __DECLARE_VAR(BOOL,M_DRAINAGE)
  __DECLARE_VAR(BOOL,M_DELAI_VIDANGE)
  __DECLARE_VAR(BOOL,M_FLOTTE)
  __DECLARE_VAR(BOOL,DEPART)
  __DECLARE_VAR(BOOL,WATER_SAVER)
  __DECLARE_VAR(BOOL,CYCLE_3)
  __DECLARE_VAR(BOOL,URGENCEZ)
  __DECLARE_VAR(BOOL,BOOSTER_READY)
  __DECLARE_VAR(BOOL,HEATER)

  // FB private variables - TEMP, private and located variables
  STEP __step_list[14];
  UINT __nb_steps;
  ACTION __action_list[14];
  UINT __nb_actions;
  __IEC_BOOL_t __transition_list[17];
  __IEC_BOOL_t __debug_transition_list[17];
  UINT __nb_transitions;
  TIME __lasttick_time;

} PRINCIPAL;

void PRINCIPAL_init__(PRINCIPAL *data__, BOOL retain);
// Code part
void PRINCIPAL_body__(PRINCIPAL *data__);
// PROGRAM GENERAL
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  TON TAMPON_CHAUFFAGE;
  TON T_OVERFLOW;
  TON T_POMPE_SAVON;
  TON T_DRAIN;
  TON T_POMPE_SAVON_3_EXTRA;
  TON T_POMPE_SANI;
  TON T_LAVAGE;
  TON T_PRE_WASH;
  TON T_DELAI_VIDANGE;
  TON T_HOT_RINSE;
  TON T_ASSAIN;
  TON DELAI_MOTEUR;
  TON T_BRAS_LAVAGE_1;
  TON T_BRAS_LAVAGE_3;
  TON T_BRAS_LAVAGE_2;
  TON T_BRAS_PRE_LAVAGE_3;
  TON T_BRAS_ASSAIN_1;
  TON T_BRAS_ASSAIN_2;
  TON T_BRAS_ASSAIN_3;
  TON T_BRAS_HOT_RINCE_1;
  TON T_BRAS_HOT_RINCE_2;
  TON T_BRAS_HOT_RINCE_3;
  TON T_ALARME_FIN_DE_CYCLE;
  URGENCE URGENCE0;
  PRINCIPAL PRINCIPAL0;
  __DECLARE_VAR(BOOL,STEP_1)
  __DECLARE_VAR(BOOL,STEP_2)
  __DECLARE_VAR(BOOL,STEP_3)
  __DECLARE_VAR(BOOL,STEP_4)
  __DECLARE_VAR(BOOL,STEP_5)
  __DECLARE_VAR(BOOL,STEP_6)
  __DECLARE_VAR(BOOL,STEP_7)
  __DECLARE_VAR(BOOL,STEP_8)
  __DECLARE_VAR(BOOL,STEP_9)
  __DECLARE_VAR(BOOL,STEP_10)
  __DECLARE_VAR(BOOL,STEP_11)
  __DECLARE_VAR(BOOL,STEP_12)
  __DECLARE_VAR(BOOL,STEP_13)
  __DECLARE_VAR(BOOL,STEP_14)
  __DECLARE_VAR(BOOL,STEP_15)
  __DECLARE_VAR(BOOL,STEP_16)
  __DECLARE_VAR(BOOL,STEP_17)
  __DECLARE_VAR(BOOL,STEP_18)
  __DECLARE_VAR(BOOL,DEPART)
  __DECLARE_VAR(BOOL,CYCLE_1)
  __DECLARE_VAR(BOOL,WATER_SAVER)
  __DECLARE_VAR(BOOL,CYCLE_3)
  __DECLARE_VAR(BOOL,URGENCEL)
  __DECLARE_VAR(BOOL,COUVERT)
  __DECLARE_VAR(BOOL,FLOTTE_BASSIN_BAS)
  __DECLARE_VAR(BOOL,FLOTTE_BOOSTER)
  __DECLARE_VAR(BOOL,FLOTTE_BASSIN_HAUT)
  __DECLARE_VAR(BOOL,SELECTEUR_LO_LEVEL)
  __DECLARE_VAR(BOOL,BOOSTER_READY)
  __DECLARE_VAR(BOOL,HEATER)
  __DECLARE_VAR(BOOL,MOTEUR)
  __DECLARE_VAR(BOOL,DRAIN)
  __DECLARE_VAR(BOOL,BUZZER)
  __DECLARE_VAR(BOOL,CHAUFFAGE)
  __DECLARE_VAR(BOOL,EAU_BOOSTER)
  __DECLARE_VAR(BOOL,EAU_FRAICHE)
  __DECLARE_VAR(BOOL,POMPE_SAVON)
  __DECLARE_VAR(BOOL,POMPE_ASSAIN)
  __DECLARE_VAR(BOOL,LUMIERE_VERTE)
  __DECLARE_VAR(BOOL,LUMIERE_JAUNE)
  __DECLARE_VAR(BOOL,BRAS_DE_LAVAGE)
  __DECLARE_VAR(BOOL,UNUSED0)
  __DECLARE_VAR(BOOL,UNUSED1)
  __DECLARE_VAR(BOOL,UNUSED2)
  __DECLARE_VAR(BOOL,M_LAVAGE)
  __DECLARE_VAR(BOOL,M_RINSE)
  __DECLARE_VAR(BOOL,M_HOT_RINSE)
  __DECLARE_VAR(BOOL,M_P_SAVON)
  __DECLARE_VAR(BOOL,M_P_ASSAIN)
  __DECLARE_VAR(BOOL,M_DRAINAGE)
  __DECLARE_VAR(BOOL,M_STEP_1)
  __DECLARE_VAR(BOOL,M_STEP_2)
  __DECLARE_VAR(BOOL,M_DRAIN)
  __DECLARE_VAR(BOOL,M_FICTIVE)
  __DECLARE_VAR(BOOL,M_STEP_3)
  __DECLARE_VAR(BOOL,M_STEP_4)
  __DECLARE_VAR(BOOL,M_STEP_5)
  __DECLARE_VAR(BOOL,M_STEP_6)
  __DECLARE_VAR(BOOL,M_STEP_7)
  __DECLARE_VAR(BOOL,M_STEP_8)
  __DECLARE_VAR(BOOL,M_STEP_9)
  __DECLARE_VAR(BOOL,M_STEP_10)
  __DECLARE_VAR(BOOL,M_STEP_11)
  __DECLARE_VAR(BOOL,M_STEP_12)
  __DECLARE_VAR(BOOL,M_STEP_13)
  __DECLARE_VAR(BOOL,M_STEP_14)
  __DECLARE_VAR(BOOL,M_STEP_15)
  __DECLARE_VAR(BOOL,M_STEP_16)
  __DECLARE_VAR(BOOL,M_DELAI_VIDANGE)
  __DECLARE_VAR(BOOL,M_DELAI_MOTEUR)
  __DECLARE_VAR(BOOL,M_STEP_17)
  __DECLARE_VAR(BOOL,M_STEP_18)
  __DECLARE_VAR(BOOL,M_TAMPON_CHAUFFAGE)
  __DECLARE_VAR(BOOL,M_BRAS)
  __DECLARE_VAR(BOOL,M_BRAS_2)
  __DECLARE_VAR(BOOL,M_STEP_22)
  __DECLARE_VAR(BOOL,M_OVERFLOW)
  __DECLARE_VAR(BOOL,M_ALARM_OVERFLOW)
  __DECLARE_VAR(BOOL,M_FIN_DE_CYCLE)
  __DECLARE_VAR(BOOL,M_FLOTTE)
  __DECLARE_VAR(BOOL,M_BRAS_3)
  __DECLARE_VAR(BOOL,SB_INTERGRAFCET)
  __DECLARE_VAR(BOOL,SB_FIRSTRUN)

} GENERAL;

void GENERAL_init__(GENERAL *data__, BOOL retain);
// Code part
void GENERAL_body__(GENERAL *data__);
#endif //__POUS_H
