TYPE
  LOGLEVEL : (CRITICAL, WARNING, INFO, DEBUG) := INFO;
END_TYPE

FUNCTION_BLOCK LOGGER
  VAR_INPUT
    TRIG : BOOL;
    MSG : STRING;
    LEVEL : LOGLEVEL := INFO;
  END_VAR
  VAR
    TRIG0 : BOOL;
  END_VAR

  IF TRIG AND NOT TRIG0 THEN
  {{
   LogMessage(GetFbVar(LEVEL),(char*)GetFbVar(MSG, .body),GetFbVar(MSG, .len));
  }}
  END_IF;
  TRIG0:=TRIG;
END_FUNCTION_BLOCK



FUNCTION_BLOCK python_eval
  VAR_INPUT
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    STATE : DWORD;
    BUFFER : STRING;
    PREBUFFER : STRING;
    TRIGM1 : BOOL;
    TRIGGED : BOOL;
  END_VAR

  {extern void __PythonEvalFB(int, PYTHON_EVAL*);__PythonEvalFB(0, data__);}
END_FUNCTION_BLOCK

FUNCTION_BLOCK python_poll
  VAR_INPUT
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    STATE : DWORD;
    BUFFER : STRING;
    PREBUFFER : STRING;
    TRIGM1 : BOOL;
    TRIGGED : BOOL;
  END_VAR

  {extern void __PythonEvalFB(int, PYTHON_EVAL*);__PythonEvalFB(1,(PYTHON_EVAL*)(void*)data__);}
END_FUNCTION_BLOCK

FUNCTION_BLOCK python_gear
  VAR_INPUT
    N : UINT;
    TRIG : BOOL;
    CODE : STRING;
  END_VAR
  VAR_OUTPUT
    ACK : BOOL;
    RESULT : STRING;
  END_VAR
  VAR
    py_eval : python_eval;
    COUNTER : UINT;
    ADD10_OUT : UINT;
    EQ13_OUT : BOOL;
    SEL15_OUT : UINT;
    AND7_OUT : BOOL;
  END_VAR

  ADD10_OUT := ADD(COUNTER, 1);
  EQ13_OUT := EQ(N, ADD10_OUT);
  SEL15_OUT := SEL(EQ13_OUT, ADD10_OUT, 0);
  COUNTER := SEL15_OUT;
  AND7_OUT := AND(EQ13_OUT, TRIG);
  py_eval(TRIG := AND7_OUT, CODE := CODE);
  ACK := py_eval.ACK;
  RESULT := py_eval.RESULT;
END_FUNCTION_BLOCK


FUNCTION_BLOCK urgence
  VAR_OUTPUT
    ST12 : BOOL;
    ST13 : BOOL;
    ST14 : BOOL;
    ST15 : BOOL;
  END_VAR
  VAR_INPUT
    DEPART : BOOL;
    URGENCES : BOOL;
    M_DRAINAGE : BOOL;
    M_STEP_1 : BOOL;
  END_VAR

  INITIAL_STEP S13:
    ST12(N);
  END_STEP

  TRANSITION FROM S13 TO S14
    := DEPART AND NOT(URGENCES);
  END_TRANSITION

  STEP S14:
    ST13(N);
  END_STEP

  TRANSITION FROM S14 TO S15
    := M_DRAINAGE;
  END_TRANSITION

  STEP S15:
    ST14(N);
  END_STEP

  TRANSITION FROM S15 TO S16
    := URGENCES;
  END_TRANSITION

  STEP S16:
    ST15(N);
  END_STEP

  TRANSITION FROM S16 TO S13
    := M_STEP_1;
  END_TRANSITION

END_FUNCTION_BLOCK

FUNCTION_BLOCK principal
  VAR_OUTPUT
    ST1 : BOOL;
    ST2 : BOOL;
    ST3 : BOOL;
    ST4 : BOOL;
    ST5 : BOOL;
    ST6 : BOOL;
    ST7 : BOOL;
    ST8 : BOOL;
    ST9 : BOOL;
    ST10 : BOOL;
    ST11 : BOOL;
    ST16 : BOOL;
    ST17 : BOOL;
    ST18 : BOOL;
  END_VAR
  VAR_INPUT
    M_LAVAGE : BOOL;
    M_RINSE : BOOL;
    M_HOT_RINSE : BOOL;
    M_P_SAVON : BOOL;
    M_P_ASSAIN : BOOL;
    M_DRAINAGE : BOOL;
    M_DELAI_VIDANGE : BOOL;
    M_FLOTTE : BOOL;
    DEPART : BOOL;
    WATER_SAVER : BOOL;
    CYCLE_3 : BOOL;
    URGENCEZ : BOOL;
    BOOSTER_READY : BOOL;
    HEATER : BOOL;
  END_VAR

  INITIAL_STEP S1:
    ST1(N);
  END_STEP

  TRANSITION FROM S1 TO S2
    := CYCLE_3 AND URGENCEZ AND DEPART;
  END_TRANSITION

  STEP S2:
    ST2(N);
  END_STEP

  TRANSITION FROM S2 TO S3
    := M_P_SAVON AND M_FLOTTE;
  END_TRANSITION

  STEP S3:
    ST3(N);
  END_STEP

  TRANSITION FROM S3 TO S4
    := M_LAVAGE;
  END_TRANSITION

  STEP S4:
    ST4(N);
  END_STEP

  TRANSITION FROM S4 TO S5
    := M_DRAINAGE;
  END_TRANSITION

  STEP S5:
    ST5(N);
  END_STEP

  TRANSITION FROM S5 TO S6
    := M_P_ASSAIN AND M_FLOTTE;
  END_TRANSITION

  STEP S6:
    ST6(N);
  END_STEP

  TRANSITION FROM S6 TO S7
    := M_RINSE;
  END_TRANSITION

  STEP S7:
    ST7(N);
  END_STEP

  TRANSITION FROM S7 TO S8
    := (NOT(BOOSTER_READY) OR NOT(HEATER)) AND M_DRAINAGE;
  END_TRANSITION

  STEP S8:
    ST8(N);
  END_STEP

  TRANSITION FROM S8 TO S9
    := M_FLOTTE;
  END_TRANSITION

  STEP S9:
    ST9(N);
  END_STEP

  TRANSITION FROM S9 TO S10
    := M_HOT_RINSE;
  END_TRANSITION

  STEP S10:
    ST10(N);
  END_STEP

  TRANSITION FROM S10 TO S1
    := NOT(CYCLE_3) AND WATER_SAVER AND DEPART;
  END_TRANSITION

  TRANSITION FROM S10 TO S11
    := M_DELAI_VIDANGE OR NOT(WATER_SAVER);
  END_TRANSITION

  STEP S11:
    ST11(N);
  END_STEP

  TRANSITION FROM S11 TO S1
    := M_DRAINAGE;
  END_TRANSITION

  TRANSITION FROM S10 TO S16
    := CYCLE_3 AND WATER_SAVER AND DEPART;
  END_TRANSITION

  STEP S16:
    ST16(N);
  END_STEP

  TRANSITION FROM S16 TO S17
    := M_P_SAVON AND M_FLOTTE;
  END_TRANSITION

  STEP S17:
    ST17(N);
  END_STEP

  TRANSITION FROM S17 TO S18
    := M_LAVAGE;
  END_TRANSITION

  STEP S18:
    ST18(N);
  END_STEP

  TRANSITION FROM S18 TO S1
    := M_DRAINAGE;
  END_TRANSITION

  TRANSITION FROM S1 TO S16
    := CYCLE_3 AND URGENCEZ AND DEPART;
  END_TRANSITION

END_FUNCTION_BLOCK

PROGRAM general
  VAR
    TAMPON_CHAUFFAGE : TON;
    T_OVERFLOW : TON;
    T_POMPE_SAVON : TON;
    T_DRAIN : TON;
    T_POMPE_SAVON_3_EXTRA : TON;
    T_POMPE_SANI : TON;
    T_LAVAGE : TON;
    T_PRE_WASH : TON;
    T_DELAI_VIDANGE : TON;
    T_HOT_RINSE : TON;
    T_ASSAIN : TON;
    DELAI_MOTEUR : TON;
    T_BRAS_LAVAGE_1 : TON;
    T_BRAS_LAVAGE_3 : TON;
    T_BRAS_LAVAGE_2 : TON;
    T_BRAS_PRE_LAVAGE_3 : TON;
    T_BRAS_ASSAIN_1 : TON;
    T_BRAS_ASSAIN_2 : TON;
    T_BRAS_ASSAIN_3 : TON;
    T_BRAS_HOT_RINCE_1 : TON;
    T_BRAS_HOT_RINCE_2 : TON;
    T_BRAS_HOT_RINCE_3 : TON;
    T_ALARME_FIN_DE_CYCLE : TON;
    urgence0 : urgence;
    principal0 : principal;
    STEP_1 : BOOL;
    STEP_2 : BOOL;
    STEP_3 : BOOL;
    STEP_4 : BOOL;
    STEP_5 : BOOL;
    STEP_6 : BOOL;
    STEP_7 : BOOL;
    STEP_8 : BOOL;
    STEP_9 : BOOL;
    STEP_10 : BOOL;
    STEP_11 : BOOL;
    STEP_12 : BOOL;
    STEP_13 : BOOL;
    STEP_14 : BOOL;
    STEP_15 : BOOL;
    STEP_16 : BOOL;
    STEP_17 : BOOL;
    STEP_18 : BOOL;
  END_VAR
  VAR
    DEPART : BOOL;
    CYCLE_1 : BOOL;
    WATER_SAVER : BOOL;
    CYCLE_3 : BOOL;
    URGENCEL : BOOL;
    COUVERT : BOOL;
    FLOTTE_BASSIN_BAS : BOOL;
    FLOTTE_BOOSTER : BOOL;
    FLOTTE_BASSIN_HAUT : BOOL;
    SELECTEUR_LO_LEVEL : BOOL;
    BOOSTER_READY : BOOL;
    HEATER : BOOL;
    MOTEUR : BOOL;
    DRAIN : BOOL;
    BUZZER : BOOL;
    CHAUFFAGE : BOOL;
    EAU_BOOSTER : BOOL;
    EAU_FRAICHE : BOOL;
    POMPE_SAVON : BOOL;
    POMPE_ASSAIN : BOOL;
    LUMIERE_VERTE : BOOL;
    LUMIERE_JAUNE : BOOL;
    BRAS_DE_LAVAGE : BOOL;
    unused0 : BOOL;
    unused1 : BOOL;
    unused2 : BOOL;
  END_VAR
  VAR
    M_LAVAGE : BOOL;
    M_RINSE : BOOL;
    M_HOT_RINSE : BOOL;
    M_P_SAVON : BOOL;
    M_P_ASSAIN : BOOL;
    M_DRAINAGE : BOOL;
    M_STEP_1 : BOOL;
    M_STEP_2 : BOOL;
    M_DRAIN : BOOL;
    M_FICTIVE : BOOL;
    M_STEP_3 : BOOL;
    M_STEP_4 : BOOL;
    M_STEP_5 : BOOL;
    M_STEP_6 : BOOL;
    M_STEP_7 : BOOL;
    M_STEP_8 : BOOL;
    M_STEP_9 : BOOL;
    M_STEP_10 : BOOL;
    M_STEP_11 : BOOL;
    M_STEP_12 : BOOL;
    M_STEP_13 : BOOL;
    M_STEP_14 : BOOL;
    M_STEP_15 : BOOL;
    M_STEP_16 : BOOL;
    M_DELAI_VIDANGE : BOOL;
    M_DELAI_MOTEUR : BOOL;
    M_STEP_17 : BOOL;
    M_STEP_18 : BOOL;
    M_TAMPON_CHAUFFAGE : BOOL;
    M_BRAS : BOOL;
    M_BRAS_2 : BOOL;
    M_STEP_22 : BOOL;
    M_OVERFLOW : BOOL;
    M_ALARM_OVERFLOW : BOOL;
    M_FIN_DE_CYCLE : BOOL;
    M_FLOTTE : BOOL;
    M_BRAS_3 : BOOL;
    SB_INTERGRAFCET : BOOL;
    SB_FIRSTRUN : BOOL;
  END_VAR

  principal0(M_LAVAGE := M_LAVAGE, M_RINSE := M_RINSE, M_HOT_RINSE := M_HOT_RINSE, M_P_SAVON := M_P_SAVON, M_P_ASSAIN := M_P_ASSAIN, M_DRAINAGE := M_DRAINAGE, M_DELAI_VIDANGE := M_DELAI_VIDANGE, M_FLOTTE := M_FLOTTE, DEPART := DEPART, WATER_SAVER := WATER_SAVER, CYCLE_3 := CYCLE_3, URGENCEZ := URGENCEL, BOOSTER_READY := BOOSTER_READY, HEATER := HEATER);
  STEP_1 := principal0.ST1;
  STEP_2 := principal0.ST2;
  STEP_3 := principal0.ST3;
  STEP_4 := principal0.ST4;
  STEP_5 := principal0.ST5;
  STEP_6 := principal0.ST6;
  STEP_7 := principal0.ST7;
  STEP_8 := principal0.ST8;
  STEP_9 := principal0.ST9;
  STEP_10 := principal0.ST10;
  STEP_11 := principal0.ST11;
  STEP_16 := principal0.ST16;
  STEP_17 := principal0.ST17;
  STEP_18 := principal0.ST18;
  urgence0(DEPART := DEPART, URGENCES := URGENCEL, M_DRAINAGE := M_DRAINAGE, M_STEP_1 := M_STEP_1);
  STEP_12 := urgence0.ST12;
  STEP_13 := urgence0.ST13;
  STEP_14 := urgence0.ST14;
  STEP_15 := urgence0.ST15;
  SB_INTERGRAFCET := SB_FIRSTRUN OR STEP_15;
  IF M_STEP_16 OR M_STEP_2 THEN
    LUMIERE_VERTE := TRUE; (*set*)
  END_IF;
  EAU_FRAICHE := NOT(M_OVERFLOW) AND NOT(M_FLOTTE) AND (M_STEP_16 OR M_STEP_2 OR M_STEP_5);
  POMPE_SAVON := NOT(M_P_SAVON) AND (M_STEP_16 OR M_STEP_2);
  MOTEUR := (NOT(M_LAVAGE) OR NOT(M_HOT_RINSE) OR NOT(M_RINSE) OR NOT(M_DRAINAGE)) AND COUVERT AND (M_DELAI_MOTEUR AND (M_STEP_11 OR M_STEP_13 OR M_STEP_18 OR M_STEP_4 OR M_STEP_7) OR M_DELAI_VIDANGE OR M_DRAIN OR M_STEP_6 OR M_STEP_9);
  M_DRAIN := M_DRAINAGE AND COUVERT AND (M_STEP_11 OR M_STEP_13 OR M_STEP_18 OR M_STEP_4 OR M_STEP_7);
  POMPE_ASSAIN := NOT(M_P_ASSAIN) AND M_STEP_5;
  EAU_BOOSTER := M_OVERFLOW AND (NOT(M_FLOTTE) AND M_STEP_8 OR FLOTTE_BOOSTER);
  IF M_TAMPON_CHAUFFAGE AND (NOT(FLOTTE_BOOSTER) OR NOT(HEATER)) THEN
    CHAUFFAGE := FALSE; (*reset*)
  END_IF;
  TAMPON_CHAUFFAGE(IN := NOT(FLOTTE_BOOSTER), PT := T#4s);
  M_TAMPON_CHAUFFAGE := TAMPON_CHAUFFAGE.Q;
  M_ALARM_OVERFLOW := M_OVERFLOW AND DEPART;
  T_OVERFLOW(IN := NOT(M_ALARM_OVERFLOW) AND (M_STEP_16 OR M_STEP_2 OR M_STEP_5 OR M_STEP_8), PT := T#180s);
  M_OVERFLOW := T_OVERFLOW.Q;
  T_POMPE_SAVON(IN := M_STEP_2, PT := T#5s);
  T_POMPE_SAVON_3_EXTRA(IN := M_STEP_16, PT := T#5s);
  M_P_SAVON := T_POMPE_SAVON.Q OR T_POMPE_SAVON_3_EXTRA.Q;
  T_POMPE_SANI(IN := M_STEP_5, PT := T#5s);
  M_P_ASSAIN := T_POMPE_SANI.Q;
  T_LAVAGE(IN := COUVERT AND M_DRAIN, PT := T#20s);
  T_PRE_WASH(IN := COUVERT AND M_DELAI_VIDANGE, PT := T#120s);
  M_LAVAGE := T_LAVAGE.Q OR T_PRE_WASH.Q;
  T_DRAIN(IN := COUVERT AND (M_STEP_11 OR M_STEP_13 OR M_STEP_18 OR M_STEP_4 OR M_STEP_7), PT := T#25s);
  M_DRAINAGE := T_DRAIN.Q;
  T_DELAI_VIDANGE(IN := M_STEP_10, PT := T#600s);
  M_DELAI_VIDANGE := T_DELAI_VIDANGE.Q;
  T_HOT_RINSE(IN := COUVERT AND M_STEP_9, PT := T#15s);
  M_HOT_RINSE := T_HOT_RINSE.Q;
  T_ASSAIN(IN := COUVERT AND M_STEP_6, PT := T#20s);
  M_RINSE := T_ASSAIN.Q;
  BUZZER := NOT(COUVERT) AND NOT(M_STEP_10) AND M_STEP_1 OR NOT(M_FIN_DE_CYCLE) AND M_STEP_10 OR M_OVERFLOW OR M_STEP_14;
  M_STEP_1 := NOT(URGENCEL) AND M_STEP_1;
  M_STEP_2 := NOT(URGENCEL) AND M_STEP_2;
  M_DRAIN := NOT(URGENCEL) AND M_DRAIN;
  M_STEP_4 := NOT(URGENCEL) AND M_STEP_4;
  M_STEP_5 := NOT(URGENCEL) AND M_STEP_5;
  M_STEP_6 := NOT(URGENCEL) AND M_STEP_6;
  M_STEP_7 := NOT(URGENCEL) AND M_STEP_7;
  M_STEP_8 := NOT(URGENCEL) AND M_STEP_8;
  M_STEP_9 := NOT(URGENCEL) AND M_STEP_9;
  M_STEP_10 := NOT(URGENCEL) AND M_STEP_10;
  M_STEP_11 := NOT(URGENCEL) AND M_STEP_11;
  M_STEP_12 := M_STEP_12;
  M_STEP_13 := M_STEP_13;
  M_STEP_14 := M_STEP_14;
  M_STEP_15 := M_STEP_15;
  M_STEP_16 := NOT(URGENCEL) AND M_STEP_16;
  M_DELAI_VIDANGE := NOT(URGENCEL) AND M_DELAI_VIDANGE;
  M_STEP_18 := NOT(URGENCEL) AND M_STEP_18;
  IF M_DRAIN THEN
    DRAIN := FALSE; (*reset*)
  END_IF;
  IF NOT(M_DRAIN) THEN
    DRAIN := TRUE; (*set*)
  END_IF;
  LUMIERE_JAUNE := M_STEP_10;
  DELAI_MOTEUR(IN := M_DRAIN, PT := T#5s);
  M_DELAI_MOTEUR := DELAI_MOTEUR.Q;
  BRAS_DE_LAVAGE := NOT(M_BRAS) AND (M_DELAI_VIDANGE OR M_DRAIN) OR NOT(M_BRAS_2) AND M_STEP_6 OR NOT(M_STEP_22) AND M_STEP_9;
  T_BRAS_LAVAGE_1(IN := CYCLE_1 AND COUVERT AND M_DRAIN, PT := T#10s);
  T_BRAS_LAVAGE_3(IN := CYCLE_3 AND COUVERT AND M_DRAIN, PT := T#5s);
  T_BRAS_LAVAGE_2(IN := NOT(CYCLE_3) AND NOT(CYCLE_1) AND COUVERT AND M_DRAIN, PT := T#40s);
  T_BRAS_PRE_LAVAGE_3(IN := CYCLE_3 AND COUVERT AND M_DELAI_VIDANGE, PT := T#30s);
  M_BRAS := T_BRAS_LAVAGE_1.Q OR T_BRAS_LAVAGE_2.Q OR T_BRAS_LAVAGE_3.Q OR T_BRAS_PRE_LAVAGE_3.Q;
  T_BRAS_ASSAIN_1(IN := CYCLE_1 AND COUVERT AND M_STEP_6, PT := T#5s);
  T_BRAS_ASSAIN_2(IN := NOT(CYCLE_3) AND NOT(CYCLE_1) AND COUVERT AND M_STEP_6, PT := T#5s);
  T_BRAS_ASSAIN_3(IN := CYCLE_3 AND COUVERT AND M_STEP_6, PT := T#5s);
  M_BRAS_2 := T_BRAS_ASSAIN_1.Q OR T_BRAS_ASSAIN_2.Q OR T_BRAS_ASSAIN_3.Q;
  T_BRAS_HOT_RINCE_1(IN := CYCLE_1 AND COUVERT AND M_STEP_9, PT := T#10s);
  T_BRAS_HOT_RINCE_2(IN := NOT(CYCLE_3) AND NOT(CYCLE_1) AND COUVERT AND M_STEP_9, PT := T#10s);
  T_BRAS_HOT_RINCE_3(IN := CYCLE_3 AND COUVERT AND M_STEP_9, PT := T#10s);
  M_STEP_22 := T_BRAS_HOT_RINCE_1.Q OR T_BRAS_HOT_RINCE_2.Q OR T_BRAS_HOT_RINCE_3.Q;
  T_ALARME_FIN_DE_CYCLE(IN := M_STEP_10, PT := T#1s);
  M_FIN_DE_CYCLE := T_ALARME_FIN_DE_CYCLE.Q;
  M_FLOTTE := SELECTEUR_LO_LEVEL AND FLOTTE_BASSIN_BAS AND CYCLE_1 OR FLOTTE_BASSIN_HAUT;
END_PROGRAM


CONFIGURATION Config0

  RESOURCE Res0 ON PLC
    TASK task0(INTERVAL := T#20ms,PRIORITY := 0);
    PROGRAM instance0 WITH task0 : general;
  END_RESOURCE
END_CONFIGURATION
