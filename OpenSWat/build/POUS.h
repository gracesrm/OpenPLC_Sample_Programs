#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// PROGRAM OPENSWAT
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,USENSOR)
  __DECLARE_VAR(BOOL,SW)
  __DECLARE_VAR(BOOL,PB)
  __DECLARE_VAR(BOOL,SINPUT1)
  __DECLARE_VAR(BOOL,SINPUT2)
  __DECLARE_VAR(BOOL,SINPUT3)
  __DECLARE_VAR(BOOL,SINPUT4)
  __DECLARE_VAR(BOOL,SINPUT5)
  __DECLARE_VAR(BOOL,SINPUT6)
  __DECLARE_VAR(BOOL,SINPUT7)
  __DECLARE_VAR(BOOL,SINPUT8)
  __DECLARE_VAR(BOOL,SINPUT9)
  __DECLARE_VAR(BOOL,SINPUT10)
  __DECLARE_VAR(BOOL,SINPUT11)
  __DECLARE_VAR(BOOL,SINPUT12)
  __DECLARE_VAR(BOOL,SINPUT13)
  __DECLARE_VAR(BOOL,SINPUT14)
  __DECLARE_VAR(BOOL,SINPUT15)
  __DECLARE_VAR(BOOL,SINPUT16)
  __DECLARE_VAR(BOOL,SINPUT17)
  __DECLARE_VAR(BOOL,SINPUT18)
  __DECLARE_VAR(BOOL,SINPUT19)
  __DECLARE_VAR(BOOL,SINPUT20)
  __DECLARE_VAR(BOOL,SINPUT21)
  __DECLARE_VAR(BOOL,SINPUT22)
  __DECLARE_VAR(BOOL,SINPUT23)
  __DECLARE_VAR(BOOL,SINPUT24)
  __DECLARE_VAR(BOOL,SINPUT25)
  __DECLARE_VAR(BOOL,SINPUT26)
  __DECLARE_VAR(BOOL,SINPUT27)
  __DECLARE_VAR(BOOL,SINPUT28)
  __DECLARE_VAR(BOOL,SINPUT29)
  __DECLARE_VAR(BOOL,SINPUT30)
  __DECLARE_VAR(BOOL,SINPUT31)
  __DECLARE_VAR(BOOL,SINPUT32)
  __DECLARE_VAR(BOOL,SINPUT33)
  __DECLARE_VAR(UINT,TEMPSENSOR1)
  __DECLARE_VAR(UINT,TEMPSENSOR2)
  __DECLARE_VAR(BOOL,LED1)
  __DECLARE_VAR(BOOL,LED2)
  __DECLARE_VAR(BOOL,LED3)
  __DECLARE_VAR(BOOL,LED4)
  __DECLARE_VAR(BOOL,LED5)
  __DECLARE_VAR(BOOL,LED6)
  __DECLARE_VAR(BOOL,LED7)
  __DECLARE_VAR(BOOL,LED8)
  __DECLARE_VAR(BOOL,LED9)
  __DECLARE_VAR(BOOL,LED10)
  __DECLARE_VAR(BOOL,LED11)
  __DECLARE_VAR(BOOL,LED12)
  __DECLARE_VAR(BOOL,LED13)
  __DECLARE_VAR(BOOL,LED14)
  __DECLARE_VAR(BOOL,LED15)
  __DECLARE_VAR(BOOL,LED16)
  __DECLARE_VAR(BOOL,LED17)
  __DECLARE_VAR(BOOL,LED18)
  __DECLARE_VAR(BOOL,LED19)
  __DECLARE_VAR(BOOL,LED20)
  __DECLARE_VAR(BOOL,LED21)
  __DECLARE_VAR(BOOL,LED22)
  __DECLARE_VAR(BOOL,LED23)
  TOF TOF0;
  TOF TOF1;
  TOF TOF11;
  TOF TOF2;
  TOF TOF3;
  TOF TOF5;
  TOF TOF6;
  TOF TOF7;
  TOF TOF4;
  TOF TOF9;
  TOF TOF10;
  TOF TOF8;
  __DECLARE_VAR(BOOL,GE75_OUT)
  __DECLARE_VAR(BOOL,LE99_OUT)
  __DECLARE_VAR(BOOL,LT111_OUT)
  __DECLARE_VAR(BOOL,GE82_OUT)

} OPENSWAT;

void OPENSWAT_init__(OPENSWAT *data__, BOOL retain);
// Code part
void OPENSWAT_body__(OPENSWAT *data__);
#endif //__POUS_H
