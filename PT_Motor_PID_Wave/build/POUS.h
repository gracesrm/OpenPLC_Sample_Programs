#include "beremiz.h"
#ifndef __POUS_H
#define __POUS_H

#include "accessor.h"
#include "iec_std_lib.h"

__DECLARE_ENUMERATED_TYPE(LOGLEVEL,
  LOGLEVEL__CRITICAL,
  LOGLEVEL__WARNING,
  LOGLEVEL__INFO,
  LOGLEVEL__DEBUG
)
// FUNCTION_BLOCK LOGGER
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,MSG)
  __DECLARE_VAR(LOGLEVEL,LEVEL)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(BOOL,TRIG0)

} LOGGER;

void LOGGER_init__(LOGGER *data__, BOOL retain);
// Code part
void LOGGER_body__(LOGGER *data__);
// FUNCTION_BLOCK PYTHON_EVAL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_EVAL;

void PYTHON_EVAL_init__(PYTHON_EVAL *data__, BOOL retain);
// Code part
void PYTHON_EVAL_body__(PYTHON_EVAL *data__);
// FUNCTION_BLOCK PYTHON_POLL
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(DWORD,STATE)
  __DECLARE_VAR(STRING,BUFFER)
  __DECLARE_VAR(STRING,PREBUFFER)
  __DECLARE_VAR(BOOL,TRIGM1)
  __DECLARE_VAR(BOOL,TRIGGED)

} PYTHON_POLL;

void PYTHON_POLL_init__(PYTHON_POLL *data__, BOOL retain);
// Code part
void PYTHON_POLL_body__(PYTHON_POLL *data__);
// FUNCTION_BLOCK PYTHON_GEAR
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(UINT,N)
  __DECLARE_VAR(BOOL,TRIG)
  __DECLARE_VAR(STRING,CODE)
  __DECLARE_VAR(BOOL,ACK)
  __DECLARE_VAR(STRING,RESULT)

  // FB private variables - TEMP, private and located variables
  PYTHON_EVAL PY_EVAL;
  __DECLARE_VAR(UINT,COUNTER)
  __DECLARE_VAR(UINT,ADD10_OUT)
  __DECLARE_VAR(BOOL,EQ13_OUT)
  __DECLARE_VAR(UINT,SEL15_OUT)
  __DECLARE_VAR(BOOL,AND7_OUT)

} PYTHON_GEAR;

void PYTHON_GEAR_init__(PYTHON_GEAR *data__, BOOL retain);
// Code part
void PYTHON_GEAR_body__(PYTHON_GEAR *data__);
// FUNCTION_BLOCK HYSTERESE2
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(WORD,IN)
  __DECLARE_VAR(WORD,LOW)
  __DECLARE_VAR(WORD,HIGH)
  __DECLARE_VAR(BOOL,OUT)

  // FB private variables - TEMP, private and located variables

} HYSTERESE2;

void HYSTERESE2_init__(HYSTERESE2 *data__, BOOL retain);
// Code part
void HYSTERESE2_body__(HYSTERESE2 *data__);
// PROGRAM PROGRAM0
// Data part
typedef struct {
  // PROGRAM Interface - IN, OUT, IN_OUT variables

  // PROGRAM private variables - TEMP, private and located variables
  HYSTERESE2 HYSTERESE20;

} PROGRAM0;

void PROGRAM0_init__(PROGRAM0 *data__, BOOL retain);
// Code part
void PROGRAM0_body__(PROGRAM0 *data__);
// FUNCTION_BLOCK TWO_STEPS_BURNER_PID
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,START)
  __DECLARE_VAR(REAL,T_SET)
  __DECLARE_VAR(REAL,T_ACT)
  __DECLARE_VAR(BOOL,BURNER_ON)
  __DECLARE_VAR(BOOL,LEVEL_1)
  __DECLARE_VAR(BOOL,LEVEL_2)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(REAL,XO)
  __DECLARE_VAR(REAL,KP)
  __DECLARE_VAR(REAL,TR)
  __DECLARE_VAR(REAL,TD)
  __DECLARE_VAR(TIME,CYCLE)
  PID PID0;
  __DECLARE_VAR(WORD,L_MIN)
  __DECLARE_VAR(WORD,L_MAX)
  HYSTERESE2 HYSTERESE20;
  HYSTERESE2 HYSTERESE21;
  __DECLARE_VAR(WORD,LOW_ST1)
  __DECLARE_VAR(WORD,HIGH_ST1)
  __DECLARE_VAR(WORD,LOW_ST2)
  __DECLARE_VAR(WORD,HIGH_ST2)
  __DECLARE_VAR(WORD,REAL_TO_WORD11_OUT)
  __DECLARE_VAR(WORD,LIMIT10_OUT)
  __DECLARE_VAR(BOOL,NOT22_OUT)
  __DECLARE_VAR(BOOL,AND20_OUT)

} TWO_STEPS_BURNER_PID;

void TWO_STEPS_BURNER_PID_init__(TWO_STEPS_BURNER_PID *data__, BOOL retain);
// Code part
void TWO_STEPS_BURNER_PID_body__(TWO_STEPS_BURNER_PID *data__);
// FUNCTION_BLOCK PT_CALC
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(REAL,RTD)
  __DECLARE_VAR(REAL,R_0_GRAD)
  __DECLARE_VAR(REAL,R_REF)
  __DECLARE_VAR(REAL,RATIO)
  __DECLARE_VAR(REAL,R_IST)
  __DECLARE_VAR(REAL,TEMP)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(REAL,R_0_NORM)
  __DECLARE_VAR(REAL,K_32768)
  __DECLARE_VAR(REAL,A)
  __DECLARE_VAR(REAL,B)
  __DECLARE_VAR(REAL,C)
  __DECLARE_VAR(REAL,K_2)
  __DECLARE_VAR(REAL,K_3)
  __DECLARE_VAR(REAL,K_4)
  __DECLARE_VAR(REAL,K_5)
  __DECLARE_VAR(REAL,K_100)
  __DECLARE_VAR(REAL,K_MIN1)
  __DECLARE_VAR(REAL,K_A_KL0)
  __DECLARE_VAR(REAL,K_B_KL0)
  __DECLARE_VAR(REAL,K_C_KL0)
  __DECLARE_VAR(REAL,K_D_KL0)
  __DECLARE_VAR(REAL,K_E_KL0)
  __DECLARE_VAR(REAL,K_242_02)
  __DECLARE_VAR(REAL,DIV3_OUT)
  __DECLARE_VAR(REAL,MUL8_OUT)
  __DECLARE_VAR(REAL,DIV41_OUT)
  __DECLARE_VAR(REAL,MUL42_OUT)
  __DECLARE_VAR(BOOL,GE78_OUT)
  __DECLARE_VAR(REAL,MUL29_OUT)
  __DECLARE_VAR(REAL,MUL30_OUT)
  __DECLARE_VAR(REAL,EXPT22_OUT)
  __DECLARE_VAR(REAL,EXPT19_OUT)
  __DECLARE_VAR(REAL,MUL12_OUT)
  __DECLARE_VAR(REAL,SUB11_OUT)
  __DECLARE_VAR(REAL,MUL13_OUT)
  __DECLARE_VAR(REAL,MUL15_OUT)
  __DECLARE_VAR(REAL,MUL16_OUT)
  __DECLARE_VAR(REAL,SUB25_OUT)
  __DECLARE_VAR(REAL,SQRT26_OUT)
  __DECLARE_VAR(REAL,ADD32_OUT)
  __DECLARE_VAR(REAL,MUL34_OUT)
  __DECLARE_VAR(REAL,MUL33_OUT)
  __DECLARE_VAR(REAL,DIV38_OUT)
  __DECLARE_VAR(BOOL,MOVE74_ENO)
  __DECLARE_VAR(REAL,MOVE74_OUT)
  __DECLARE_VAR(BOOL,NOT81_OUT)
  __DECLARE_VAR(REAL,EXPT46_OUT)
  __DECLARE_VAR(REAL,MUL49_OUT)
  __DECLARE_VAR(REAL,EXPT50_OUT)
  __DECLARE_VAR(REAL,MUL54_OUT)
  __DECLARE_VAR(REAL,SUB55_OUT)
  __DECLARE_VAR(REAL,EXPT57_OUT)
  __DECLARE_VAR(REAL,MUL61_OUT)
  __DECLARE_VAR(REAL,SUB56_OUT)
  __DECLARE_VAR(REAL,EXPT62_OUT)
  __DECLARE_VAR(REAL,MUL66_OUT)
  __DECLARE_VAR(REAL,ADD67_OUT)
  __DECLARE_VAR(REAL,MUL72_OUT)
  __DECLARE_VAR(REAL,ADD68_OUT)
  __DECLARE_VAR(REAL,SUB69_OUT)
  __DECLARE_VAR(BOOL,MOVE79_ENO)
  __DECLARE_VAR(REAL,MOVE79_OUT)

} PT_CALC;

void PT_CALC_init__(PT_CALC *data__, BOOL retain);
// Code part
void PT_CALC_body__(PT_CALC *data__);
// FUNCTION_BLOCK WELL_PAK_STEU
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(BOOL,SSR)
  __DECLARE_VAR(BOOL,START)
  __DECLARE_VAR(INT,PERCENT_POWER)

  // FB private variables - TEMP, private and located variables
  TP TP0;
  RS RS0;
  F_TRIG F_TRIG0;
  F_TRIG F_TRIG1;
  __DECLARE_VAR(INT,SUMME)
  __DECLARE_VAR(INT,K_100)
  __DECLARE_VAR(TIME,K_T_02)
  __DECLARE_VAR(BOOL,GE8_OUT)
  __DECLARE_VAR(BOOL,ADD35_ENO)
  __DECLARE_VAR(INT,ADD35_OUT)
  __DECLARE_VAR(BOOL,AND38_OUT)
  __DECLARE_VAR(BOOL,SUB11_ENO)
  __DECLARE_VAR(INT,SUB11_OUT)

} WELL_PAK_STEU;

void WELL_PAK_STEU_init__(WELL_PAK_STEU *data__, BOOL retain);
// Code part
void WELL_PAK_STEU_body__(WELL_PAK_STEU *data__);
// FUNCTION_BLOCK ANALOG_IN_REALTEMP_OUT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(WORD,MW_ACT)
  __DECLARE_VAR(REAL,MW_IST0)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(WORD,RES_IN)
  __DECLARE_VAR(WORD,PT_RANGE)
  __DECLARE_VAR(REAL,WORD_TO_REAL8_OUT)
  __DECLARE_VAR(REAL,WORD_TO_REAL2_OUT)
  __DECLARE_VAR(REAL,WORD_TO_REAL3_OUT)
  __DECLARE_VAR(REAL,DIV1_OUT)
  __DECLARE_VAR(REAL,DIV6_OUT)

} ANALOG_IN_REALTEMP_OUT;

void ANALOG_IN_REALTEMP_OUT_init__(ANALOG_IN_REALTEMP_OUT *data__, BOOL retain);
// Code part
void ANALOG_IN_REALTEMP_OUT_body__(ANALOG_IN_REALTEMP_OUT *data__);
// FUNCTION_BLOCK RND_ANY_DECPT
// Data part
typedef struct {
  // FB Interface - IN, OUT, IN_OUT variables
  __DECLARE_VAR(BOOL,EN)
  __DECLARE_VAR(BOOL,ENO)
  __DECLARE_VAR(REAL,IN_REAL)
  __DECLARE_VAR(REAL,OUT_REAL_ROUNDED)
  __DECLARE_VAR(INT,DEC_PT)

  // FB private variables - TEMP, private and located variables
  __DECLARE_VAR(REAL,INT_TO_REAL5_OUT)
  __DECLARE_VAR(REAL,MUL11_OUT)
  __DECLARE_VAR(REAL,EXP3_OUT)
  __DECLARE_VAR(REAL,MUL2_OUT)
  __DECLARE_VAR(INT,REAL_TO_INT6_OUT)
  __DECLARE_VAR(REAL,INT_TO_REAL7_OUT)
  __DECLARE_VAR(REAL,DIV8_OUT)

} RND_ANY_DECPT;

void RND_ANY_DECPT_init__(RND_ANY_DECPT *data__, BOOL retain);
// Code part
void RND_ANY_DECPT_body__(RND_ANY_DECPT *data__);
#endif //__POUS_H
