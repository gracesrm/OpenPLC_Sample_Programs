FUNCTION_BLOCK SLIDINGMEAN_A
  VAR_INPUT  START, END, VALUE : INT; END_VAR
  VAR MEAN : INT := 0; WEIGHT  : INT := 1; END_VAR
  VAR_OUTPUT Q : INT; END_VAR

  IF START < END THEN
    MEAN := (END - START) / WEIGHT * VALUE + MEAN;
    WEIGHT := END - START + WEIGHT;
  END_IF;
  Q := MEAN;
END_FUNCTION_BLOCK


FUNCTION_BLOCK SLIDINGMEAN_B
  VAR_INPUT  START, END, VALUE : INT;
             RESET : BOOL;
  END_VAR
  VAR MEAN :INT := 0; WEIGHT  : INT := 1; END_VAR
  VAR_OUTPUT Q : INT; END_VAR

  IF RESET THEN
    WEIGHT := 1; MEAN := 0;
  ELSIF START < END THEN
    MEAN := (END - START) * VALUE + WEIGHT * MEAN;
    WEIGHT := END - START + WEIGHT;
  END_IF;

END_FUNCTION_BLOCK


PROGRAM WARN_ABOVE
  VAR SENSOR, THRESHOLD : INT; END_VAR
  VAR SM : SLIDINGMEAN_A; END_VAR
  VAR_OUTPUT CRITICAL : BOOL; END_VAR
  SM(START := 0, END := 7, VALUE := SENSOR);
  CRITICAL :=  SM.Q > THRESHOLD;
END_PROGRAM

PROGRAM WARN_BELOW
  VAR SENSOR, THRESHOLD : INT; END_VAR
  VAR SM : SLIDINGMEAN_A; END_VAR
  VAR_OUTPUT CRITICAL : BOOL; END_VAR
  SM(START := 0, END := 7, VALUE := SENSOR);
  CRITICAL :=  SM.Q <= THRESHOLD;
END_PROGRAM


CONFIGURATION Config0
  RESOURCE Res0 ON PLC
    TASK TASK0(INTERVAL := T#50MS, PRIORITY := 0);
    PROGRAM INSTANCE0 WITH TASK0 : WARN_ABOVE;
    PROGRAM INSTANCE1 WITH TASK0 : WARN_BELOW;
  END_RESOURCE
END_CONFIGURATION
