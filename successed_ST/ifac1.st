TYPE
  OPMODE : (OP , TEACH);
  TEACHSTATUS :  (OK, NOTEACHPOINTS, TEACHING, INVALIDTEACHPOINTS, INVALIDINPUTVALUE);
END_TYPE



PROGRAM ANALOGSENSOR

VAR CONSTANT
  SENSORINPUT_MIN : INT := 0;
  SENSORINPUT_MAX : INT := 4095;
  TEACHTIMEOUT : TIME := TIME#20S0MS;
  ICONST : INT := 1000;
END_VAR

VAR_INPUT
  TPSET, SENSORINPUT, TPY  : INT;
  OPERATIONMODE : OPMODE;
END_VAR

VAR_OUTPUT
  SENSOROUTPUT : INT;
END_VAR

VAR
  INITIAL          : BOOL;
  LASTMODE : OPMODE;
  STATUS        : TEACHSTATUS;
  TEACHSTEP : SINT;
  X_TEMP, Y_TEMP, T, M, X1, Y1, X2, Y2 : INT;

  TIMEOUT : TON;
END_VAR

IF NOT INITIAL THEN
  X1 := 0;
  Y1 := 0;
  X2 := 0;
  Y2 := 0;
  STATUS := TEACHSTATUS#NOTEACHPOINTS;
  INITIAL := TRUE;
ELSE
  IF OPERATIONMODE = OPMODE#OP THEN
    IF STATUS = TEACHSTATUS#OK AND SENSORINPUT >= SENSORINPUT_MIN AND SENSORINPUT <= SENSORINPUT_MAX THEN
      SENSOROUTPUT := M * SENSORINPUT / ICONST + T;
    ELSE
      SENSOROUTPUT := 0;
    END_IF;
  ELSIF OPERATIONMODE = OPMODE#TEACH THEN
    IF LASTMODE <> OPERATIONMODE THEN
      TEACHSTEP := 0;
      TIMEOUT(IN := FALSE);
    END_IF;

    CASE TEACHSTEP OF
      0:
         STATUS := TEACHSTATUS#TEACHING;
         TIMEOUT(IN := TRUE, PT:=TEACHTIMEOUT);
         IF TIMEOUT.Q THEN
           OPERATIONMODE := OPMODE#OP;
         END_IF;

         IF INT_TO_BOOL(TPSET) AND SENSORINPUT >= SENSORINPUT_MIN AND SENSORINPUT <= SENSORINPUT_MAX THEN
           Y1 := TPY;
           X1 := SENSORINPUT;
           TEACHSTEP := 1;
           TIMEOUT(IN := FALSE);
         END_IF;
      1:
         IF INT_TO_BOOL(TPSET) = FALSE THEN
           TEACHSTEP := 2;
         END_IF;
      2:
         TIMEOUT(IN := TRUE, PT:=TEACHTIMEOUT);

         IF TIMEOUT.Q THEN
           OPERATIONMODE := OPMODE#OP;
         END_IF;

         IF INT_TO_BOOL(TPSET) AND SENSORINPUT >= SENSORINPUT_MIN AND SENSORINPUT <= SENSORINPUT_MAX THEN
           Y2 := TPY;
           X2 := SENSORINPUT;
           TEACHSTEP := 3;
           TIMEOUT(IN := FALSE);
         END_IF;
       3:
        IF X1 > X2 THEN
           X_TEMP := X1;
	   Y_TEMP := Y1;
	   X1 := X2;
	   Y1 := Y2;
	   X2 := X_TEMP;
	   Y2 := Y_TEMP;
         END_IF;

         IF X2 - X1 <> 0 THEN
           M   := (Y2 - Y1) * ICONST / (X2 - X1);
           T   := Y1 - M * X1 / ICONST;
           STATUS := TEACHSTATUS#OK;
	 ELSE
           STATUS := TEACHSTATUS#INVALIDTEACHPOINTS;
	   OPERATIONMODE := OPMODE#OP;
         END_IF;
       END_CASE;
  END_IF;
END_IF;
LASTMODE := OPERATIONMODE;
END_PROGRAM

CONFIGURATION Config0
  RESOURCE Res0 ON PLC
    TASK TASK0(INTERVAL := T#50MS, PRIORITY := 0);
    PROGRAM INSTANCE0 WITH TASK0 : ANALOGSENSOR;
  END_RESOURCE
END_CONFIGURATION
