TYPE

    MAGAZIN_STATES_T : (GREEN_LAMP, INIT, INTERSTEP, MAGAZIN_INIT,
    MAGAZIN_INIT_2, SLIDER_MOVE_BACK, START_MAGAZIN, STEP0, STEP1, CONVEY);

    STAMP_STATES_T : (GREEN_LAMP, INIT, INTERSTEP, INTERSTEP_2, STAMPPROCESS,
    STAMPSLIDERBACK, STAMPSLIDERFORWARD, STAMP_INIT_1, STAMP_INIT_2,
    STAMP_INIT_3, STAMP_INIT_4, START_STAMP, STEP0, STEP1, STEP2);

    CRANE_STATES_T : (CRANE_GO_UP, CRANE_INIT, CRANE_INIT_2,
    CRANE_LIFT_AT_STAMP, CRANE_LIFT_CONVEYOR, CRANE_LIFT_CONVEYOR_BLACK,
    CRANE_LIFT_MAGAZIN, CRANE_LIFT_MAGAZIN_METALLIC,
    CRANE_LIFT_NOT_METALLIC_BLACK, CRANE_LOWER, CRANE_ON_CONVEYOR,
    CRANE_ON_CONVEYOR_METALLIC, CRANE_ON_CONVEYOR_NOT_METALLICA_BLACK,
    CRANE_ON_STAMP_METALLIC, CRANE_ON_STAMP_STOP_BLACK,
    CRANE_TURN_LEFT_BACK_TO_STAMP, CRANE_TURN_LEFT_FROM_STAMP,
    CRANE_TURN_LEFT_METALLIC, CRANE_TURN_LEFT_NOT_METALLIC,
    CRANE_TURN_LEFT_NOT_METALLIC_BLACK, INIT, INTERSTEP, INTERSTEP_2,
    LAST_WORKPIECE_AT_STAMP, LOWER_CRANE, MAGAZIN_STOP, MAGAZIN_STOP_BLACK,
    NO_WORKPIECE_READY, RESET_INTERCONNECT, START_CRANE, STEP0, SUCK_AT_STAMP,
    TIMEDELAY, TURN_RIGHT, TURN_RIGHT_BLACK, PAUSE, RELEASE, RELEASE_BLACK,
    RELEASE_WORKPIECE);

END_TYPE

FUNCTION_BLOCK MAGAZIN
    VAR_INPUT  CRANEDOWN : BOOL; END_VAR
    VAR_OUTPUT  CRANELOWER : BOOL; END_VAR
    VAR_INPUT  CRANEONCONVEYOR : BOOL; END_VAR
    VAR_INPUT  CRANEONMAGAZIN : BOOL; END_VAR
    VAR_INPUT  CRANESUCKED : BOOL; END_VAR
    VAR_OUTPUT  CRANETURNCLOCKWISE : BOOL; END_VAR
    VAR_OUTPUT  CRANETURNCOUNTERCLOCKWISE : BOOL; END_VAR
    VAR_INPUT  CRANEUP : BOOL; END_VAR
    VAR_OUTPUT  MAGAZINGREENLAMP : BOOL; END_VAR
    VAR_OUTPUT  MAGAZINSLIDER : BOOL; END_VAR
    VAR_OUTPUT  MAGAZINVACUUMOFF : BOOL; END_VAR
    VAR_OUTPUT  MAGAZINVACUUMON : BOOL; END_VAR
    VAR_OUTPUT  MAGAZINWHITELAMP : BOOL; END_VAR
    VAR  SFCINIT : BOOL; END_VAR
    VAR_INPUT  SFCRESET : BOOL; END_VAR
    VAR_INPUT  SLIDERMOVEDOUT : BOOL; END_VAR
    VAR_INPUT  SLIDERNOTMOVEDOUT : BOOL; END_VAR
    VAR_INPUT  STARTBUTTONMAGAZIN : BOOL; END_VAR
    VAR_OUTPUT  STARTCOMMANDMAGAZIN : BOOL; END_VAR
    VAR_INPUT  STARTVAR : BOOL; END_VAR
    VAR_INPUT  WORKPIECEREADY : BOOL; END_VAR
    VAR  _STATE : MAGAZIN_STATES_T; END_VAR
    VAR  _TRANSIT : BOOL; END_VAR
    VAR  INTERCONNECTMAGAZINSTARTCOMMAND : BOOL; END_VAR

    CASE _STATE OF
        MAGAZIN_STATES_T#GREEN_LAMP:
            _TRANSIT := FALSE;
            MAGAZINGREENLAMP := TRUE;
            INTERCONNECTMAGAZINSTARTCOMMAND := FALSE;
            IF TRUE THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#MAGAZIN_INIT;
            END_IF;

        MAGAZIN_STATES_T#INIT:
            _TRANSIT := FALSE;
            IF TRUE THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#START_MAGAZIN;
            END_IF;

        MAGAZIN_STATES_T#INTERSTEP:
            _TRANSIT := FALSE;
            STARTCOMMANDMAGAZIN := TRUE;
            IF STARTVAR THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#CONVEY;
            END_IF;

        MAGAZIN_STATES_T#MAGAZIN_INIT:
            _TRANSIT := FALSE;
            MAGAZINSLIDER := TRUE;
            IF TRUE THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#MAGAZIN_INIT_2;
            END_IF;

        MAGAZIN_STATES_T#MAGAZIN_INIT_2:
            _TRANSIT := FALSE;
            MAGAZINSLIDER := FALSE;
            IF TRUE THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#INTERSTEP;
            END_IF;

        MAGAZIN_STATES_T#SLIDER_MOVE_BACK:
            _TRANSIT := FALSE;
            IF ((SLIDERMOVEDOUT = TRUE) AND (SLIDERNOTMOVEDOUT = FALSE)) THEN
                MAGAZINSLIDER := FALSE;
            END_IF;
            IF CRANEUP THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#STEP1;
            END_IF;

        MAGAZIN_STATES_T#START_MAGAZIN:
            _TRANSIT := FALSE;
            MAGAZINSLIDER := FALSE;
            MAGAZINGREENLAMP := FALSE;
            STARTVAR := FALSE;
            STARTCOMMANDMAGAZIN := FALSE;
            IF (STARTBUTTONMAGAZIN = TRUE) THEN
                INTERCONNECTMAGAZINSTARTCOMMAND := TRUE;
            END_IF;
            IF INTERCONNECTMAGAZINSTARTCOMMAND THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#GREEN_LAMP;
            END_IF;

        MAGAZIN_STATES_T#STEP0:
            _TRANSIT := FALSE;
            IF CRANEDOWN THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#SLIDER_MOVE_BACK;
            END_IF;

        MAGAZIN_STATES_T#STEP1:
            _TRANSIT := FALSE;
            IF CRANEONCONVEYOR THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#INTERSTEP;
            END_IF;

        MAGAZIN_STATES_T#CONVEY:
            _TRANSIT := FALSE;
            IF SLIDERNOTMOVEDOUT THEN
                MAGAZINSLIDER := TRUE;
            END_IF;
            IF CRANEONMAGAZIN THEN
                _TRANSIT := TRUE;
                _STATE := MAGAZIN_STATES_T#STEP0;
            END_IF;

            END_CASE;
END_FUNCTION_BLOCK


FUNCTION_BLOCK STAMP_FB
VAR_INPUT  CRANEDOWN : BOOL; END_VAR
VAR_INPUT  CRANEONCONVEYOR : BOOL; END_VAR
VAR_INPUT  CRANEPOSITIONSTAMP : BOOL; END_VAR
VAR_INPUT  CRANESUCKED : BOOL; END_VAR
VAR_INPUT  CRANEUP : BOOL; END_VAR
VAR  DURATION : TIME := TIME#500MS; END_VAR
VAR  SFCINIT : BOOL; END_VAR
VAR_INPUT  SFCRESET : BOOL; END_VAR
VAR_OUTPUT  STAMPGREENLAMP : BOOL; END_VAR
VAR_INPUT  STAMPLOWERED : BOOL; END_VAR
VAR_OUTPUT  STAMPPRESSURE : BOOL; END_VAR
VAR_OUTPUT  STAMPPUSHER : BOOL; END_VAR
VAR_INPUT  STAMPSLIDERFILLED : BOOL; END_VAR
VAR_OUTPUT  STAMPSLIDERMOVEDIN : BOOL; END_VAR
VAR_OUTPUT  STAMPSLIDERMOVEDOUT : BOOL; END_VAR
VAR_INPUT  STAMPSLIDERSENSORMOVEDIN : BOOL; END_VAR
VAR_INPUT  STAMPSLIDERSENSORMOVEDOUT : BOOL; END_VAR
VAR_INPUT  STAMPSTARTBUTTON : BOOL; END_VAR
VAR_INPUT  STAMPUP : BOOL; END_VAR
VAR_OUTPUT  STAMPWHITELAMP : BOOL; END_VAR
VAR_OUTPUT  STARTCOMMANDSTAMP : BOOL; END_VAR
VAR_INPUT  STARTVAR : BOOL; END_VAR
VAR  TIMER : TON; END_VAR
VAR  _STATE : STAMP_STATES_T; END_VAR
VAR  _TRANSIT : BOOL; END_VAR
VAR  INTERCONNECT : BOOL; END_VAR
VAR  INTERCONNECTSTAMPSTARTCOMMAND : BOOL; END_VAR

CASE _STATE OF
    STAMP_STATES_T#GREEN_LAMP:
        _TRANSIT := FALSE;
        STAMPGREENLAMP := TRUE;
        INTERCONNECTSTAMPSTARTCOMMAND := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STAMP_INIT_1;
        END_IF;

    STAMP_STATES_T#INIT:
        _TRANSIT := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#START_STAMP;
        END_IF;

    STAMP_STATES_T#INTERSTEP:
        _TRANSIT := FALSE;
        STARTCOMMANDSTAMP := TRUE;
        IF STARTVAR THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#INTERSTEP_2;
        END_IF;

    STAMP_STATES_T#INTERSTEP_2:
        _TRANSIT := FALSE;
        IF STAMPSLIDERFILLED THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STEP0;
        END_IF;

    STAMP_STATES_T#STAMPPROCESS:
        _TRANSIT := FALSE;
        STAMPSLIDERMOVEDIN := FALSE;
        STAMPPUSHER := TRUE;
        IF STAMPLOWERED THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STEP1;
        END_IF;

    STAMP_STATES_T#STAMPSLIDERBACK:
        _TRANSIT := FALSE;
        STAMPSLIDERMOVEDIN := TRUE;
        STAMPSLIDERMOVEDOUT := FALSE;
        IF STAMPSLIDERSENSORMOVEDIN THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STAMPPROCESS;
        END_IF;

    STAMP_STATES_T#STAMPSLIDERFORWARD:
        _TRANSIT := FALSE;
        STAMPPUSHER := FALSE;
        STAMPSLIDERMOVEDOUT := TRUE;
        IF ((STAMPLOWERED = FALSE) AND (STAMPUP = TRUE)) THEN
            INTERCONNECT := FALSE;
        END_IF;
        TIMER(IN := FALSE, PT := TIME#1MS);
        IF STAMPSLIDERMOVEDOUT THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STEP2;
        END_IF;

    STAMP_STATES_T#STAMP_INIT_1:
        _TRANSIT := FALSE;
        STAMPSLIDERMOVEDIN := TRUE;
        STAMPSLIDERMOVEDOUT := FALSE;
        IF STAMPSLIDERSENSORMOVEDIN THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STAMP_INIT_2;
        END_IF;

    STAMP_STATES_T#STAMP_INIT_2:
        _TRANSIT := FALSE;
        STAMPSLIDERMOVEDIN := FALSE;
        STAMPSLIDERMOVEDOUT := TRUE;
        IF STAMPSLIDERSENSORMOVEDOUT THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STAMP_INIT_3;
        END_IF;

    STAMP_STATES_T#STAMP_INIT_3:
        _TRANSIT := FALSE;
        STAMPPUSHER := TRUE;
        IF STAMPLOWERED THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STAMP_INIT_4;
        END_IF;

    STAMP_STATES_T#STAMP_INIT_4:
        _TRANSIT := FALSE;
        STAMPPUSHER := FALSE;
        IF STAMPUP THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#INTERSTEP;
        END_IF;

    STAMP_STATES_T#START_STAMP:
        _TRANSIT := FALSE;
        STAMPSLIDERMOVEDOUT := FALSE;
        STAMPSLIDERMOVEDIN := FALSE;
        STAMPPUSHER := FALSE;
        STAMPGREENLAMP := FALSE;
        STAMPPRESSURE := FALSE;
        STARTCOMMANDSTAMP := FALSE;
        IF (STAMPSTARTBUTTON = TRUE) THEN
            INTERCONNECTSTAMPSTARTCOMMAND := TRUE;
        END_IF;
        IF INTERCONNECTSTAMPSTARTCOMMAND THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#GREEN_LAMP;
        END_IF;

    STAMP_STATES_T#STEP0:
        _TRANSIT := FALSE;
        IF CRANEUP THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STAMPSLIDERBACK;
        END_IF;

    STAMP_STATES_T#STEP1:
        _TRANSIT := FALSE;
        TIMER(IN := STAMPLOWERED, PT := TIME#12MS);
        INTERCONNECT := TIMER.Q;
        IF INTERCONNECT THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#STAMPSLIDERFORWARD;
        END_IF;

    STAMP_STATES_T#STEP2:
        _TRANSIT := FALSE;
        IF (CRANEONCONVEYOR AND NOT STAMPSLIDERFILLED) THEN
            _TRANSIT := TRUE;
            _STATE := STAMP_STATES_T#INTERSTEP;
        END_IF;

    END_CASE;
END_FUNCTION_BLOCK

FUNCTION_BLOCK CRANE_FB
VAR  CRANTURNCLOCKWISE : BOOL; END_VAR
VAR_INPUT  CRANEDOWN : BOOL; END_VAR
VAR_OUTPUT  CRANELOWER : BOOL; END_VAR
VAR_INPUT  CRANEONCONVEYOR : BOOL; END_VAR
VAR_INPUT  CRANEONMAGAZIN : BOOL; END_VAR
VAR_INPUT  CRANEPOSITIONSTAMP : BOOL; END_VAR
VAR_INPUT  CRANESUCKED : BOOL; END_VAR
VAR_OUTPUT  CRANETURNCLOCKWISE : BOOL; END_VAR
VAR_OUTPUT  CRANETURNCOUNTERCLOCKWISE : BOOL; END_VAR
VAR_INPUT  CRANEUP : BOOL; END_VAR
VAR  DURATION1 : TIME := TIME#1S500MS; END_VAR
VAR_INPUT  MAGAZINCAPACITIVESENSOR : BOOL; END_VAR
VAR_OUTPUT  MAGAZINSLIDER : BOOL; END_VAR
VAR_OUTPUT  MAGAZINVACUUMOFF : BOOL; END_VAR
VAR_OUTPUT  MAGAZINVACUUMON : BOOL; END_VAR
VAR  SFCINIT : BOOL; END_VAR
VAR_INPUT  SFCRESET : BOOL; END_VAR
VAR_INPUT  SLIDERMOVEDOUT : BOOL; END_VAR
VAR_INPUT  SLIDERNOTMOVEDOUT : BOOL; END_VAR
VAR_INPUT  STAMPLOWERED : BOOL; END_VAR
VAR_INPUT  STAMPSLIDERFILLED : BOOL; END_VAR
VAR_INPUT  STARTBUTTONMAGAZIN : BOOL; END_VAR
VAR_OUTPUT  STARTCOMMANDCRANE : BOOL; END_VAR
VAR_INPUT  STARTVAR : BOOL; END_VAR
VAR  TIMEDELAY_TIMER : TON; END_VAR
VAR  TIMEDELAY_TIMER_DURATION : TIME := TIME#50MS; END_VAR
VAR  TIMEDELAY_TIMER_INTERCONNECT : BOOL; END_VAR
VAR  TIMER1 : TON; END_VAR
VAR_INPUT  WORKPIECEREADY : BOOL; END_VAR
VAR  _STATE : CRANE_STATES_T; END_VAR
VAR  _TRANSIT : BOOL; END_VAR
VAR  ACTUALTIME1 : TIME; END_VAR
VAR  INTERCONNECT : BOOL; END_VAR
VAR  INTERCONNECTCRANESTARTCOMMAND : BOOL; END_VAR

CASE _STATE OF
    CRANE_STATES_T#CRANE_GO_UP:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        IF (CRANEUP AND (MAGAZINCAPACITIVESENSOR OR NOT WORKPIECEREADY)) THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#PAUSE;
        ELSIF ((CRANEUP AND NOT MAGAZINCAPACITIVESENSOR) AND WORKPIECEREADY) THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#TURN_RIGHT_BLACK;
        END_IF;

    CRANE_STATES_T#CRANE_INIT:
        _TRANSIT := FALSE;
        CRANELOWER := TRUE;
        INTERCONNECTCRANESTARTCOMMAND := FALSE;
        IF CRANEDOWN THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_INIT_2;
        END_IF;

    CRANE_STATES_T#CRANE_INIT_2:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        IF CRANEUP THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#INTERSTEP;
        END_IF;

    CRANE_STATES_T#CRANE_LIFT_AT_STAMP:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        IF CRANEUP THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_TURN_LEFT_FROM_STAMP;
        END_IF;

    CRANE_STATES_T#CRANE_LIFT_CONVEYOR:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#INTERSTEP;
        END_IF;

    CRANE_STATES_T#CRANE_LIFT_CONVEYOR_BLACK:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        IF CRANEUP THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_TURN_LEFT_BACK_TO_STAMP;
        END_IF;

    CRANE_STATES_T#CRANE_LIFT_MAGAZIN:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        IF CRANEUP THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_TURN_LEFT_NOT_METALLIC;
        END_IF;

    CRANE_STATES_T#CRANE_LIFT_MAGAZIN_METALLIC:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        IF CRANEUP THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_TURN_LEFT_METALLIC;
        END_IF;

    CRANE_STATES_T#CRANE_LIFT_NOT_METALLIC_BLACK:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        IF CRANEUP THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_TURN_LEFT_NOT_METALLIC_BLACK;
        END_IF;

    CRANE_STATES_T#CRANE_LOWER:
        _TRANSIT := FALSE;
        MAGAZINVACUUMON := TRUE;
        MAGAZINVACUUMOFF := FALSE;
        CRANELOWER := TRUE;
        IF CRANESUCKED THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#STEP0;
        END_IF;

    CRANE_STATES_T#CRANE_ON_CONVEYOR:
        _TRANSIT := FALSE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        CRANETURNCLOCKWISE := FALSE;
        CRANELOWER := TRUE;
        IF CRANEDOWN THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#RELEASE;
        END_IF;

    CRANE_STATES_T#CRANE_ON_CONVEYOR_METALLIC:
        _TRANSIT := FALSE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        CRANETURNCLOCKWISE := FALSE;
        CRANELOWER := TRUE;
        IF CRANEDOWN THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#RELEASE;
        END_IF;

    CRANE_STATES_T#CRANE_ON_CONVEYOR_NOT_METALLICA_BLACK:
        _TRANSIT := FALSE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        CRANETURNCLOCKWISE := FALSE;
        CRANELOWER := TRUE;
        IF CRANEDOWN THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#RELEASE_BLACK;
        END_IF;

    CRANE_STATES_T#CRANE_ON_STAMP_METALLIC:
        _TRANSIT := FALSE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        CRANETURNCLOCKWISE := FALSE;
        CRANELOWER := TRUE;
        IF CRANEDOWN THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#RELEASE_WORKPIECE;
        END_IF;

    CRANE_STATES_T#CRANE_ON_STAMP_STOP_BLACK:
        _TRANSIT := FALSE;
        CRANETURNCLOCKWISE := FALSE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#RESET_INTERCONNECT;
        END_IF;

    CRANE_STATES_T#CRANE_TURN_LEFT_BACK_TO_STAMP:
        _TRANSIT := FALSE;
        CRANETURNCOUNTERCLOCKWISE := TRUE;
        CRANETURNCLOCKWISE := FALSE;
        IF CRANEPOSITIONSTAMP THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_ON_STAMP_STOP_BLACK;
        END_IF;

    CRANE_STATES_T#CRANE_TURN_LEFT_FROM_STAMP:
        _TRANSIT := FALSE;
        CRANETURNCLOCKWISE := TRUE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        IF CRANEONCONVEYOR THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_ON_CONVEYOR_METALLIC;
        END_IF;

    CRANE_STATES_T#CRANE_TURN_LEFT_METALLIC:
        _TRANSIT := FALSE;
        CRANETURNCOUNTERCLOCKWISE := TRUE;
        CRANETURNCLOCKWISE := FALSE;
        IF CRANEPOSITIONSTAMP THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_ON_STAMP_METALLIC;
        END_IF;

    CRANE_STATES_T#CRANE_TURN_LEFT_NOT_METALLIC:
        _TRANSIT := FALSE;
        CRANETURNCOUNTERCLOCKWISE := TRUE;
        CRANETURNCLOCKWISE := FALSE;
        IF CRANEONCONVEYOR THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_ON_CONVEYOR;
        END_IF;

    CRANE_STATES_T#CRANE_TURN_LEFT_NOT_METALLIC_BLACK:
        _TRANSIT := FALSE;
        CRANETURNCOUNTERCLOCKWISE := TRUE;
        CRANETURNCLOCKWISE := FALSE;
        IF CRANEONCONVEYOR THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_ON_CONVEYOR_NOT_METALLICA_BLACK;
        END_IF;

    CRANE_STATES_T#INIT:
        _TRANSIT := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#START_CRANE;
        END_IF;

    CRANE_STATES_T#INTERSTEP:
        _TRANSIT := FALSE;
        STARTCOMMANDCRANE := TRUE;
        IF STARTVAR THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#INTERSTEP_2;
        END_IF;

    CRANE_STATES_T#INTERSTEP_2:
        _TRANSIT := FALSE;
        IF SLIDERMOVEDOUT THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#TIMEDELAY;
        END_IF;

    CRANE_STATES_T#LAST_WORKPIECE_AT_STAMP:
        _TRANSIT := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#PAUSE;
        END_IF;

    CRANE_STATES_T#LOWER_CRANE:
        _TRANSIT := FALSE;
        CRANELOWER := TRUE;
        IF CRANEDOWN THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#SUCK_AT_STAMP;
        END_IF;

    CRANE_STATES_T#MAGAZIN_STOP:
        _TRANSIT := FALSE;
        CRANETURNCLOCKWISE := FALSE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        IF (NOT WORKPIECEREADY AND NOT STAMPSLIDERFILLED) THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#NO_WORKPIECE_READY;
        ELSIF WORKPIECEREADY THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_LOWER;
        ELSIF (NOT WORKPIECEREADY AND STAMPSLIDERFILLED) THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#LAST_WORKPIECE_AT_STAMP;
        END_IF;

    CRANE_STATES_T#MAGAZIN_STOP_BLACK:
        _TRANSIT := FALSE;
        CRANETURNCLOCKWISE := FALSE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        MAGAZINVACUUMON := TRUE;
        MAGAZINVACUUMOFF := FALSE;
        CRANELOWER := TRUE;
        IF CRANESUCKED THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_LIFT_NOT_METALLIC_BLACK;
        END_IF;

    CRANE_STATES_T#NO_WORKPIECE_READY:
        _TRANSIT := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#START_CRANE;
        END_IF;

    CRANE_STATES_T#RESET_INTERCONNECT:
        _TRANSIT := FALSE;
        INTERCONNECT := FALSE;
        TIMER1(IN := FALSE, PT := TIME#1MS);
        IF SLIDERMOVEDOUT THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#LOWER_CRANE;
        END_IF;

    CRANE_STATES_T#START_CRANE:
        _TRANSIT := FALSE;
        CRANELOWER := FALSE;
        MAGAZINVACUUMOFF := TRUE;
        MAGAZINVACUUMON := FALSE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        CRANETURNCLOCKWISE := FALSE;
        STARTVAR := FALSE;
        STARTCOMMANDCRANE := FALSE;
        IF (STARTBUTTONMAGAZIN = TRUE) THEN
            INTERCONNECTCRANESTARTCOMMAND := TRUE;
        END_IF;
        IF INTERCONNECTCRANESTARTCOMMAND THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_INIT;
        END_IF;

    CRANE_STATES_T#STEP0:
        _TRANSIT := FALSE;
        IF NOT MAGAZINCAPACITIVESENSOR THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_LIFT_MAGAZIN;
        ELSIF MAGAZINCAPACITIVESENSOR THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_LIFT_MAGAZIN_METALLIC;
        END_IF;

    CRANE_STATES_T#SUCK_AT_STAMP:
        _TRANSIT := FALSE;
        MAGAZINVACUUMON := TRUE;
        MAGAZINVACUUMOFF := FALSE;
        IF CRANESUCKED THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_LIFT_AT_STAMP;
        END_IF;

    CRANE_STATES_T#TIMEDELAY:
        _TRANSIT := FALSE;
        TIMEDELAY_TIMER(IN := TRUE, PT := TIMEDELAY_TIMER_DURATION);
        TIMEDELAY_TIMER_INTERCONNECT := TIMEDELAY_TIMER.Q;
        IF TIMEDELAY_TIMER_INTERCONNECT THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#TURN_RIGHT;
        END_IF;

    CRANE_STATES_T#TURN_RIGHT:
        _TRANSIT := FALSE;
        CRANETURNCLOCKWISE := TRUE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        IF CRANEONMAGAZIN THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#MAGAZIN_STOP;
        END_IF;

    CRANE_STATES_T#TURN_RIGHT_BLACK:
        _TRANSIT := FALSE;
        CRANETURNCLOCKWISE := TRUE;
        CRANETURNCOUNTERCLOCKWISE := FALSE;
        IF CRANEONMAGAZIN THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#MAGAZIN_STOP_BLACK;
        END_IF;

    CRANE_STATES_T#PAUSE:
        _TRANSIT := FALSE;
        TIMER1(IN := CRANEUP, PT := DURATION1);
        INTERCONNECT := TIMER1.Q;
        IF INTERCONNECT THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#RESET_INTERCONNECT;
        END_IF;

    CRANE_STATES_T#RELEASE:
        _TRANSIT := FALSE;
        MAGAZINVACUUMOFF := TRUE;
        MAGAZINVACUUMON := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_LIFT_CONVEYOR;
        END_IF;

    CRANE_STATES_T#RELEASE_BLACK:
        _TRANSIT := FALSE;
        MAGAZINVACUUMON := FALSE;
        MAGAZINVACUUMOFF := TRUE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_LIFT_CONVEYOR_BLACK;
        END_IF;

    CRANE_STATES_T#RELEASE_WORKPIECE:
        _TRANSIT := FALSE;
        MAGAZINVACUUMOFF := TRUE;
        MAGAZINVACUUMON := FALSE;
        IF TRUE THEN
            _TRANSIT := TRUE;
            _STATE := CRANE_STATES_T#CRANE_GO_UP;
        END_IF;

    END_CASE;
END_FUNCTION_BLOCK



PROGRAM MAIN

VAR_OUTPUT ACTUATOR_ANALOGCRANEPRESSURE : INT; END_VAR
VAR_OUTPUT ACTUATOR_CRANELOWER : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_CRANETURNCLOCKWISE : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_CRANETURNCOUNTERCLOCKWISE : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_MAGAZINGREENLAMP : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_MAGAZINSLIDER : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_MAGAZINVACUUMOFF : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_MAGAZINVACUUMON : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_MAGAZINWHITELAMP : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_STAMPGREENLAMP : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_STAMPPUSHER : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_STAMPSLIDERMOVEDIN : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_STAMPSLIDERMOVEDOUT : BOOL; END_VAR
VAR_OUTPUT ACTUATOR_STAMPWHITELAMP : BOOL; END_VAR
VAR  CRANE : CRANE_FB; END_VAR
VAR  MAG : MAGAZIN; END_VAR
VAR_INPUT SENSOR_CRANEDOWN : BOOL; END_VAR
VAR_INPUT SENSOR_CRANEONCONVEYOR : BOOL; END_VAR
VAR_INPUT SENSOR_CRANEONMAGAZIN : BOOL; END_VAR
VAR_INPUT SENSOR_CRANEPOSITION : BOOL; END_VAR
VAR_INPUT SENSOR_CRANEPOSITIONSTAMP : BOOL; END_VAR
VAR_INPUT SENSOR_CRANESUCKED : BOOL; END_VAR
VAR_INPUT SENSOR_CRANEUP : BOOL; END_VAR
VAR_INPUT SENSOR_MAGAZINCAPACITIVESENSOR : BOOL; END_VAR
VAR_INPUT SENSOR_MAGAZINEMERGENCYSTOP : BOOL; END_VAR
VAR_INPUT SENSOR_MAGAZINOPTICALSENSOR : BOOL; END_VAR
VAR_INPUT SENSOR_MAGAZINSWITCHMANUELLAUTOMATIC : BOOL; END_VAR
VAR_INPUT SENSOR_SLIDERMOVEDOUT : BOOL; END_VAR
VAR_INPUT SENSOR_SLIDERNOTMOVEDOUT : BOOL; END_VAR
VAR_INPUT SENSOR_STAMPEMERGENCYSTOP : BOOL; END_VAR
VAR_INPUT SENSOR_STAMPLOWERED : BOOL; END_VAR
VAR_INPUT SENSOR_STAMPSLIDERFILLED : BOOL; END_VAR
VAR_INPUT SENSOR_STAMPSLIDERSENSORMOVEDIN : BOOL; END_VAR
VAR_INPUT SENSOR_STAMPSLIDERSENSORMOVEDOUT : BOOL; END_VAR
VAR_INPUT SENSOR_STAMPSTARTBUTTON : BOOL; END_VAR
VAR_INPUT SENSOR_STAMPSWITCHMANUELLAUTOMATIC : BOOL; END_VAR
VAR_INPUT SENSOR_STAMPUP : BOOL; END_VAR
VAR_INPUT SENSOR_STARTBUTTONMAGAZIN : BOOL; END_VAR
VAR_INPUT SENSOR_WORKPIECEREADY : BOOL; END_VAR
VAR  STAMP : STAMP_FB; END_VAR

CRANE.CRANEDOWN := SENSOR_CRANEDOWN;
CRANE.CRANEONCONVEYOR := SENSOR_CRANEONCONVEYOR;
CRANE.CRANEONMAGAZIN := SENSOR_CRANEONMAGAZIN;
CRANE.CRANEPOSITIONSTAMP := SENSOR_CRANEPOSITIONSTAMP;
CRANE.CRANESUCKED := SENSOR_CRANESUCKED;
CRANE.CRANEUP := SENSOR_CRANEUP;
CRANE.MAGAZINCAPACITIVESENSOR := SENSOR_MAGAZINCAPACITIVESENSOR;
CRANE.SLIDERMOVEDOUT := SENSOR_SLIDERMOVEDOUT;
CRANE.STAMPSLIDERFILLED := SENSOR_STAMPSLIDERFILLED;
CRANE.STARTBUTTONMAGAZIN := SENSOR_STARTBUTTONMAGAZIN;
CRANE.WORKPIECEREADY := SENSOR_WORKPIECEREADY;
MAG.CRANEDOWN := SENSOR_CRANEDOWN;
MAG.CRANEONCONVEYOR := SENSOR_CRANEONCONVEYOR;
MAG.CRANEONMAGAZIN := SENSOR_CRANEONMAGAZIN;
MAG.CRANEUP := SENSOR_CRANEUP;
MAG.SLIDERMOVEDOUT := SENSOR_SLIDERMOVEDOUT;
MAG.SLIDERNOTMOVEDOUT := SENSOR_SLIDERNOTMOVEDOUT;
MAG.STARTBUTTONMAGAZIN := SENSOR_STARTBUTTONMAGAZIN;
MAG.WORKPIECEREADY := SENSOR_WORKPIECEREADY;
STAMP.CRANEDOWN := SENSOR_CRANEDOWN;
STAMP.CRANEONCONVEYOR := SENSOR_CRANEONCONVEYOR;
STAMP.CRANEPOSITIONSTAMP := SENSOR_CRANEPOSITIONSTAMP;
STAMP.CRANESUCKED := SENSOR_CRANESUCKED;
STAMP.CRANEUP := SENSOR_CRANEUP;
STAMP.STAMPLOWERED := SENSOR_STAMPLOWERED;
STAMP.STAMPSLIDERFILLED := SENSOR_STAMPSLIDERFILLED;
STAMP.STAMPSLIDERSENSORMOVEDIN := SENSOR_STAMPSLIDERSENSORMOVEDIN;
STAMP.STAMPSLIDERSENSORMOVEDOUT := SENSOR_STAMPSLIDERSENSORMOVEDOUT;
STAMP.STAMPSTARTBUTTON := SENSOR_STAMPSTARTBUTTON;
STAMP.STAMPUP := SENSOR_STAMPUP;

IF (SENSOR_STAMPEMERGENCYSTOP AND SENSOR_MAGAZINEMERGENCYSTOP) THEN
    MAG();
    CRANE();
    STAMP();
    IF (ACTUATOR_MAGAZINGREENLAMP AND ACTUATOR_STAMPGREENLAMP) THEN
        IF ((STAMP.STARTCOMMANDSTAMP AND CRANE.STARTCOMMANDCRANE) AND MAG.STARTCOMMANDMAGAZIN) THEN
            CRANE.STARTVAR := TRUE;
            MAG.STARTVAR := TRUE;
            STAMP.STARTVAR := TRUE;
        END_IF;
    END_IF;
    CRANE.SFCRESET := FALSE;
    MAG.SFCRESET := FALSE;
    STAMP.SFCRESET := FALSE;

    ACTUATOR_ANALOGCRANEPRESSURE := INT#6000;
    ACTUATOR_CRANELOWER := CRANE.CRANELOWER;
    ACTUATOR_CRANETURNCLOCKWISE := CRANE.CRANETURNCLOCKWISE;
    ACTUATOR_CRANETURNCOUNTERCLOCKWISE := CRANE.CRANETURNCOUNTERCLOCKWISE;
    ACTUATOR_MAGAZINGREENLAMP := MAG.MAGAZINGREENLAMP;
    ACTUATOR_MAGAZINSLIDER := MAG.MAGAZINSLIDER;
    ACTUATOR_MAGAZINVACUUMOFF := CRANE.MAGAZINVACUUMOFF;
    ACTUATOR_MAGAZINVACUUMON := CRANE.MAGAZINVACUUMON;
    ACTUATOR_STAMPGREENLAMP := STAMP.STAMPGREENLAMP;
    ACTUATOR_STAMPPUSHER := STAMP.STAMPPUSHER;
    ACTUATOR_STAMPSLIDERMOVEDIN := STAMP.STAMPSLIDERMOVEDIN;
    ACTUATOR_STAMPSLIDERMOVEDOUT := STAMP.STAMPSLIDERMOVEDOUT;
    ACTUATOR_STAMPWHITELAMP := STAMP.STAMPWHITELAMP;

ELSIF (NOT SENSOR_STAMPEMERGENCYSTOP OR NOT SENSOR_MAGAZINEMERGENCYSTOP) THEN
    ACTUATOR_MAGAZINSLIDER := FALSE;
    ACTUATOR_CRANELOWER := FALSE;
    ACTUATOR_MAGAZINVACUUMON := FALSE;
    ACTUATOR_MAGAZINVACUUMOFF := TRUE;
    ACTUATOR_MAGAZINGREENLAMP := FALSE;
    ACTUATOR_CRANETURNCOUNTERCLOCKWISE := FALSE;
    ACTUATOR_CRANETURNCLOCKWISE := FALSE;
    ACTUATOR_STAMPSLIDERMOVEDOUT := TRUE;
    ACTUATOR_STAMPSLIDERMOVEDIN := FALSE;
    ACTUATOR_STAMPGREENLAMP := FALSE;
    ACTUATOR_STAMPPUSHER := FALSE;
    ACTUATOR_ANALOGCRANEPRESSURE := INT#0;
    CRANE.SFCRESET := TRUE;
    MAG.SFCRESET := TRUE;
    STAMP.SFCRESET := TRUE;
    CRANE.STARTVAR := FALSE;
    MAG.STARTVAR := FALSE;
    STAMP.STARTVAR := FALSE;
END_IF;
END_PROGRAM


CONFIGURATION Config0
  RESOURCE Res0 ON PLC
    TASK TASK0(INTERVAL := T#50MS, PRIORITY := 0);
    PROGRAM INSTANCE0 WITH TASK0 : MAIN;
  END_RESOURCE
END_CONFIGURATION
